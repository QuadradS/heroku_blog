{"version":3,"sources":["pages/auth-page/styles.module.scss","pages/create-post-page/styles.module.scss","components/Header/styles.module.scss","pages/single-post-page/styles.module.scss","components/Comments/styles.module.scss","components/Post/styles.module.scss","pages/post-page/styles.module.scss","components/common/Container/style.module.scss","components/common/Input/styles.module.scss","components/common/Button/styles.module.scss","components/common/TextArea/styles.module.scss","components/common/Container/Container.jsx","components/common/Input/Input.jsx","components/common/Button/Input.jsx","state/auth/constants.js","service/index.js","service/auth.js","utils.js","pages/auth-page/auth-page.jsx","state/auth/actions.js","components/Post/Post.jsx","state/post/constants.js","service/post.js","service/comments.js","state/post/actions.js","state/user/constants.js","service/user.js","components/Header/Header.jsx","state/user/actions.js","components/common/Layout/Layout.jsx","pages/post-page/post-page.jsx","components/Comments/Comments.jsx","pages/single-post-page/single-post-page.jsx","components/common/TextArea/TextArea.jsx","pages/create-post-page/CreatePostPage.jsx","components/common/PrivateRoute/PrivateRoute.jsx","pages/not-found-page/index.jsx","pages/register-page/RegisterPage.jsx","App.jsx","state/auth/reducer.js","state/post/reducer.js","state/user/reducer.js","rootReducer.js","index.jsx"],"names":["module","exports","Container","maxWidth","children","className","styles","container","style","Input","props","cn","input","value","onChange","type","accept","placeholder","Button","button","onClick","disabled","AUTH_SIGN_IN_START","AUTH_SIGN_IN_SUCCESS","AUTH_SIGN_IN_ERROR","CHECK_TOKEN_START","CHECK_TOKEN_SUCCESS","CHECK_TOKEN_ERROR","AUTH_SIGN_UP_START","AUTH_SIGN_UP_SUCCESS","AUTH_SIGN_UP_ERROR","AUTH_SIGN_UP_CLEAR","url","getToken","localStorage","getItem","paths","auth","signIn","signUp","checkToken","user","getUser","post","getAll","getOne","getByUserID","create","comment","requestGet","isPrivate","headers","axios","get","authorization","requestPost","params","singIn","a","login","password","DATA_STATUSES","UN_TOUCHED","REQUESTING","SUCCESS","ERROR","isLoad","status","isRequesting","isSuccess","isError","connect","store","isAuth","authStatus","authSignIn","dispatch","authConstants","authService","then","res","data","setItem","token","catch","err","clear","error","useState","authData","setAuthData","key","e","target","isButtonBlock","to","auth_wrap","auth_container","Post","post_title","title","src","imageUrl","alt","id","post_text","text","GET_ALL_START","GET_ALL_SUCCESS","GET_ALL_ERROR","GET_ONE_START","GET_ONE_SUCCESS","GET_ONE_ERROR","CLEAR_POST","CREATE_POST_START","CREATE_POST_SUCCESS","CREATE_POST_ERROR","CREATE_POST_CLEAR","GET_COMMENTS_START","GET_COMMENTS_SUCCESS","GET_COMMENTS_ERROR","CREATE_COMMENT_START","CREATE_COMMENT_SUCCESS","postID","formData","author","authorID","getComments","postConstants","commentsService","GET_USER_START","GET_USER_SUCCESS","GET_USER_ERROR","userStatus","userConstants","userService","useEffect","header","header_item","user_block","name","Layout","posts","postsStatus","postService","post_page","map","p","post_page_item","getCommentsStatus","postComments","selectedPost","comments","createCommentsStatus","createComment","createCommentsClear","setComment","comments_block","_id","comments_list","c","comments_list_item","length","postStatus","selectedPostStatus","clearPost","match","post_header","post_content","TextArea","textarea","createPostStatus","createPostClear","formObj","setFormObj","isButtonDisabled","create_post","create_post_container","textAreaProps","preventDefault","file","files","postImage","FormData","append","ownProps","checkTokenStatus","routeProps","NotFound","signUpStatus","authSignUp","authSignUpClear","path","component","AuthPage","RegisterPage","exact","PostPage","SinglePostPage","CreatePostPage","authState","state","postState","action","userState","createRootReducer","combineReducers","history","createBrowserHistory","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,OAAS,uBAAuB,eAAiB,+BAA+B,UAAY,4B,mBCA5ID,EAAOC,QAAU,CAAC,YAAc,4BAA4B,sBAAwB,sCAAsC,MAAQ,sBAAsB,OAAS,yB,mBCAjKD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,WAAa,6B,mBCAzGD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,aAAe,6BAA6B,SAAW,yBAAyB,UAAY,4B,mBCAxJD,EAAOC,QAAU,CAAC,SAAW,yBAAyB,eAAiB,+BAA+B,cAAgB,8BAA8B,mBAAqB,qC,mBCAzKD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,WAAa,2BAA2B,UAAY,4B,mBCAlGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,eAAiB,iC,mBCAzED,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,wB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,2B,4KCUdC,EARG,SAAC,GAAmC,IAAD,IAAhCC,gBAAgC,MAArB,KAAqB,EAAfC,EAAe,EAAfA,SACpC,OACE,yBAAKC,UAAWC,IAAOC,UAAWC,MAAO,CAAEL,aACxCC,I,kCCUQK,EAXD,SAACC,GAAD,OACZ,2BACEL,UAAWM,IAAGL,IAAOM,MAAR,eAAkBF,EAAML,UAAYK,EAAML,YACvDQ,MAAOH,EAAMG,MACbC,SAAUJ,EAAMI,SAChBC,KAAML,EAAMK,MAAQ,OACpBC,OAAQN,EAAMM,QAAU,GACxBC,YAAaP,EAAMO,e,iBCIRC,EAXA,SAACR,GAAD,OACb,4BACEL,UAAWM,IAAGL,IAAOa,OAAR,eAAmBT,EAAML,WAAa,GAAKK,EAAML,YAC9De,QAASV,EAAMU,QACfL,KAAK,OACLM,SAAUX,EAAMW,UAEfX,EAAMN,W,wBCZEkB,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAqB,qBAErBC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAoB,oBAEpBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAqB,qB,knBCTlC,IAEMC,EAAG,UAFM,wBAEN,YADG,OAICC,EAAW,kBAAMC,aAAaC,QADd,eAGvBC,EAAQ,CACZC,KAAM,CACJC,OAAO,GAAD,OAAKN,EAAL,gBACNO,OAAO,GAAD,OAAKP,EAAL,gBACNQ,WAAW,GAAD,OAAKR,EAAL,qBAEZS,KAAM,CACJC,QAAQ,GAAD,OAAKV,EAAL,UAETW,KAAM,CACJC,OAAO,GAAD,OAAKZ,EAAL,gBACNa,OAAO,GAAD,OAAKb,EAAL,gBACNc,YAAY,GAAD,OAAKd,EAAL,iBACXe,OAAO,GAAD,OAAKf,EAAL,iBAERgB,QAAS,CACPJ,OAAO,GAAD,OAAKZ,EAAL,wBACNe,OAAO,GAAD,OAAKf,EAAL,qBAIGiB,EAAa,SAACjB,EAAKkB,GAA6B,IAAlBC,EAAiB,uDAAP,GACnD,OAAOC,IAAMC,IAAIrB,EAAK,CACpBmB,QAAQ,EAAD,CACLG,cAAeJ,EAAYjB,IAAa,MACrCkB,MAKII,EAAc,SAACvB,EAAKwB,EAAQN,GAA6B,IAAlBC,EAAiB,uDAAP,GAC5D,OAAOC,IAAMT,KAAKX,EAAKwB,EAAQ,CAC7BL,QAAQ,EAAD,CACLG,cAAeJ,EAAYjB,IAAa,MACrCkB,MAKMf,IC9CDqB,EAAM,uCAAG,+BAAAC,EAAA,6DAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,SACRL,EAAYnB,EAAMC,KAAKC,OAAQ,CAAEqB,QAAOC,aAAY,GAD5C,mFAAH,sDCFPC,EAAgB,CAC3BC,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,MAAO,SAGIC,EAAS,SAACC,GAAD,OAAYA,IAAWN,EAAcE,YAAcI,IAAWN,EAAcC,YACrFM,EAAe,SAACD,GAAD,OAAYA,IAAWN,EAAcE,YACpDM,EAAY,SAACF,GAAD,OAAYA,IAAWN,EAAcG,SACjDM,EAAU,SAACH,GAAD,OAAYA,IAAWN,EAAcI,O,uOCgC7CM,oBAAQ,SAACC,GAAD,MAAY,CACjCC,OAAQD,EAAMnC,KAAKoC,OACnBC,WAAYF,EAAMnC,KAAKqC,cACrB,CACFC,WC9BwB,SAAC,GAAD,IAAGhB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyB,SAACgB,GAClDA,EAZ6B,CAC7B7D,KAAM8D,IAYNC,EAAmB,CAAEnB,QAAOC,aAChBmB,MAAK,SAACC,GAXM,IAACC,EAYZ/C,aAAagD,QJdC,aIcsBF,EAAIC,KAAKE,OAC7CP,GAbYK,EAaeD,EAAIC,KAbT,CACnClE,KAAM8D,EACNI,aAaYG,OAAM,SAACC,GACNnD,aAAaoD,QACbV,EAbqB,CAClC7D,KAAM8D,EACNU,MAWsCF,UDiBzBd,EA/Bf,YAAuD,IAAnCE,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EAEpBa,mBAAS,CAAE7B,MAAO,GAAIC,SAAU,KAFZ,mBAE7C6B,EAF6C,KAEnCC,EAFmC,KAG9C5E,EAAW,SAAC6E,GAAD,OAAS,SAACC,GAAD,OAAOF,E,2WAAY,IAAKD,EAAN,eAAiBE,EAAMC,EAAEC,OAAOhF,WAOtEiF,GAAiBL,EAAS9B,QAAU8B,EAAS7B,UAAYQ,EAAaM,GAC5E,OAAGD,EACM,kBAAC,IAAD,CAAUsB,GAAI,MAGrB,kBAAC,EAAD,CAAW5F,SAAU,MACnB,yBAAKE,UAAWC,IAAO0F,WACrB,yBAAK3F,UAAWC,IAAO2F,gBACrB,wCACA,kBAAC,EAAD,CAAOhF,YAAa,QAASJ,MAAO4E,EAAS9B,MAAO7C,SAAUA,EAAS,SAAUT,UAAWC,IAAOM,QACnG,kBAAC,EAAD,CAAOK,YAAa,WAAYJ,MAAO4E,EAAS7B,SAAU9C,SAAUA,EAAS,YAAaT,UAAWC,IAAOM,QAC3GwD,EAAaM,IAAe,qCAC5BJ,EAAQI,IAAe,sCACxB,kBAAC,IAAD,CAAMqB,GAAI,iBAAV,kBACA,kBAAC,EAAD,CAAQ1E,SAAUyE,EAAezF,UAAWC,IAAOa,OAAQC,QApBlD,WACXqE,EAAS9B,OAAS8B,EAAS7B,UAC7Be,EAAWc,KAkBP,gB,wCErBKS,GAVF,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KACd,OACE,yBAAK5E,UAAWC,KAAOqC,MACrB,wBAAItC,UAAWC,KAAO6F,YAAalB,EAAKmB,OACxC,yBAAKC,IAAG,WAAMpB,EAAKqB,UAAYC,IAAI,KACnC,kBAAC,IAAD,CAAMR,GAAE,iBAAYd,EAAKuB,IAAMnG,UAAWC,KAAOmG,WAAYxB,EAAKyB,QCT3DC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAgB,gBAEhBC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAgB,gBAChBC,GAAa,aAEbC,GAAoB,oBACpBC,GAAsB,sBACtBC,GAAoB,oBACpBC,GAAoB,oBAEpBC,GAAqB,qBACrBC,GAAuB,uBACvBC,GAAqB,qBAErBC,GAAuB,uBACvBC,GAAyB,yBCjBzB9E,GAAM,uCAAG,sBAAAc,EAAA,sEACPT,EAAWb,EAAMO,KAAKC,QAAQ,GADvB,mFAAH,qDAINC,GAAM,uCAAG,WAAO8E,GAAP,SAAAjE,EAAA,sEACPT,EAAW,GAAD,OAAIb,EAAMO,KAAKE,OAAf,YAAyB8E,IAAU,GADtC,mFAAH,sDAIN5E,GAAM,uCAAG,WAAO6E,GAAP,SAAAlE,EAAA,sEACPH,EAAYnB,EAAMO,KAAKI,OAAQ6E,GAAU,EAAM,CAAC,eAAgB,wBADzD,mFAAH,sDCRNhF,GAAM,uCAAG,WAAO+E,GAAP,SAAAjE,EAAA,sEACPT,EAAW,GAAD,OAAIb,EAAMY,QAAQJ,OAAlB,YAA4B+E,IAAU,GADzC,mFAAH,sDAIN5E,GAAM,uCAAG,mCAAAW,EAAA,6DAASmE,EAAT,EAASA,OAAQnB,EAAjB,EAAiBA,KAAMoB,EAAvB,EAAuBA,SAAUH,EAAjC,EAAiCA,OAAjC,SACPpE,EAAY,GAAD,OAAInB,EAAMY,QAAQD,OAAlB,YAA4B4E,GAAU,CAAEE,SAAQnB,OAAMoB,aAAY,GADtE,mFAAH,sDC2ENC,GAAc,SAACJ,GAAD,OAAY,SAAC/C,GACtCA,EAZ8B,CAC9B7D,KAAMiH,KAYNC,GAAuBN,GACP5C,MAAK,SAACC,GAAD,OAASJ,GAXJK,EAWgCD,EAAIC,KAX1B,CACpClE,KAAMiH,GACN/C,UAFyB,IAACA,KAYVG,OAAM,SAACC,GAAD,OAAST,EARI,CACnC7D,KAAMiH,GACNzC,MAMyDF,S,oBCrF9C6C,GAAiB,iBACjBC,GAAmB,mBACnBC,GAAiB,iBCAjB1F,GAAO,uCAAG,sBAAAgB,EAAA,sEACRT,EAAWb,EAAMK,KAAKC,SAAS,GADvB,mFAAH,qDCqBL6B,gBAAQ,SAACC,GAAD,MAAY,CACjC6D,WAAY7D,EAAM/B,KAAK4F,WACvB5F,KAAM+B,EAAM/B,KAAKA,QACf,CACFC,QCZqB,SAACiF,GAAD,OAAY,SAAC/C,GAClCA,EAZ0B,CAC1B7D,KAAMuH,KAYNC,GAAoBZ,GACR5C,MAAK,SAACC,GAAD,OAASJ,GAXJK,EAW4BD,EAAIC,KAXtB,CAChClE,KAAMuH,GACNrD,UAFqB,IAACA,KAYVG,OAAM,SAACC,GAAD,OAAST,EARI,CAC/B7D,KAAMuH,GACN/C,MAMiDF,UDIpCd,EAfA,SAAC,GAAmC,IAAjC7B,EAAgC,EAAhCA,QAAS2F,EAAuB,EAAvBA,WAAY5F,EAAW,EAAXA,KAErC,OADA+F,oBAAU9F,EAAS,IAEjB,yBAAKrC,UAAWC,KAAOmI,QACrB,kBAAC,IAAD,CAAMpI,UAAWC,KAAOoI,YAAa3C,GAAI,KAAzC,SACA,kBAAC,IAAD,CAAM1F,UAAWC,KAAOoI,YAAa3C,GAAI,gBAAzC,eACC1B,EAAUgE,IACT,yBAAKhI,UAAWC,KAAOqI,YAAvB,SACQ,8BAAOlG,EAAKmG,WEJbC,GATA,SAAC,GAAkB,IAAhBzI,EAAe,EAAfA,SAChB,OACE,6BACE,kBAAC,GAAD,MACCA,ICiCQmE,gBAAQ,SAACC,GAAD,MAAY,CAC/BsE,MAAOtE,EAAM7B,KAAKmG,MAClBC,YAAavE,EAAM7B,KAAKoG,eAE1B,CACEnG,ON7BkB,kBAAM,SAACgC,GAC3BA,EAZyB,CACzB7D,KAAMiH,KAYNgB,KACYjE,MAAK,SAACC,GAAD,OAASJ,GAXLK,EAW4BD,EAAIC,KAXtB,CAC/BlE,KAAMiH,GACN/C,UAFoB,IAACA,KAYTG,OAAM,SAACC,GAAD,OAAST,EARG,CAC9B7D,KAAMiH,GACNzC,MAMgDF,UMoBnCd,EA/BE,SAAC,GAAoC,IAAlCuE,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,YAAanG,EAAa,EAAbA,OAEtC,OADA4F,oBAAU5F,EAAQ,IACdsB,EAAO6E,GAEP,kBAAC,EAAD,aAKAzE,EAAQyE,GAER,kBAAC,EAAD,eAMF,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,yBAAK1I,UAAWC,KAAO2I,WACpBH,EAAMI,KAAI,SAACC,GAAD,OACT,yBAAKxD,IAAKwD,EAAE3C,GAAInG,UAAWC,KAAO8I,gBAChC,kBAAC,GAAD,CAAMnE,KAAMkE,c,wCCoBX5E,gBAAQ,SAACC,GAAD,MAAY,CACjC6E,kBAAmB7E,EAAM7B,KAAK0G,kBAC9BC,aAAc9E,EAAM7B,KAAK4G,aAAaC,SACtC/G,KAAM+B,EAAM/B,KAAKA,KACjBgH,qBAAsBjF,EAAM7B,KAAK8G,wBAC/B,CACF1B,eACA2B,cP6C2B,SAAC,GAAD,IAAG7B,EAAH,EAAGA,OAAQnB,EAAX,EAAWA,KAAMoB,EAAjB,EAAiBA,SAAUH,EAA3B,EAA2BA,OAA3B,OAAwC,SAAC/C,GACpEA,EAfiC,CACjC7D,KAAMiH,KAeNC,GAAuB,CAAEJ,SAAQnB,OAAMoB,WAAUH,WACjC5C,MAAK,SAACC,GAAD,OAASJ,GAdDK,EAcgCD,EAAIC,KAd1B,CACvClE,KAAMiH,GACN/C,UAF4B,IAACA,KAebG,OAAM,SAACC,GAAD,OAAST,EAXO,CACtC7D,KH7EkC,uBG8ElCwE,MAS4DF,SOhD5DsE,oBPyCiC,SAACpE,GAAD,MAAY,CAC7CxE,KHhFkC,0BU8BrBwD,EA3CE,SAAC,GAA8H,IAA5HwD,EAA2H,EAA3HA,YAAaJ,EAA8G,EAA9GA,OAAQ2B,EAAsG,EAAtGA,aAAcD,EAAwF,EAAxFA,kBAAmB5G,EAAqE,EAArEA,KAAMiH,EAA+D,EAA/DA,cAAqCC,GAA0B,EAAhDF,qBAAgD,EAA1BE,qBAEnHnB,qBAAU,WAER,OADAT,EAAYJ,GACLgC,IACN,CAAChC,IALyI,MAO/GnC,mBAAS,IAPsG,mBAOtIxC,EAPsI,KAO7H4G,EAP6H,KAe7I,OACE,yBAAKvJ,UAAWC,KAAOkJ,UACrB,yBAAKnJ,UAAWC,KAAOuJ,gBACrB,kBAAC,EAAD,CAAO5I,YAAa,UAAWJ,MAAOmC,EAASlC,SAVhC,SAAC8E,GAAD,OAAOgE,EAAWhE,EAAEC,OAAOhF,UAW1C,kBAAC,EAAD,CAAQO,QATc,WAC1BsI,EAAc,CAAE7B,OAAQpF,EAAKmG,KAAMlC,KAAM1D,EAAS8E,SAAUrF,EAAKqH,IAAKnC,WACtEiC,EAAW,MAOP,iBAGF,yBAAKvJ,UAAWC,KAAOyJ,eAEpB1F,EAAUgF,IACTC,EAAaJ,KAAI,SAACc,GAAD,OACf,yBAAK3J,UAAWC,KAAO2J,oBACrB,4BAAKD,EAAEnC,QACP,2BAAImC,EAAEtD,UAKXrC,EAAUgF,KAAuBC,EAAaY,QAC7C,iDCSK3F,gBAAQ,SAACC,GAAD,MAAY,CAC/B7B,KAAM6B,EAAM7B,KAAK4G,aACjBY,WAAY3F,EAAM7B,KAAKyH,sBAEzB,CACEvH,ORrBkB,SAAC8E,GAAD,OAAY,SAAC/C,GACjCA,EAZyB,CACzB7D,KAAMiH,KAYNgB,GAAmBrB,GACP5C,MAAK,SAACC,GAAD,OAASJ,GAXLK,EAW4BD,EAAIC,KAXtB,CAC/BlE,KAAMiH,GACN/C,UAFoB,IAACA,KAYTG,OAAM,SAACC,GAAD,OAAST,EARG,CAC9B7D,KAAMiH,GACNzC,MAMgDF,SQkB9CgF,URdqB,iBAAO,CAC9BtJ,KAAMiH,KQcJD,gBAPWxD,EA1CQ,SAAC,GAAmD,IAAjD+F,EAAgD,EAAhDA,MAAOzH,EAAyC,EAAzCA,OAAQF,EAAiC,EAAjCA,KAAMwH,EAA2B,EAA3BA,WAAYE,EAAe,EAAfA,UAMzD,OALA7B,qBAAU,WAER,OADA3F,EAAOyH,EAAM9G,OAAOgD,IACb6D,IACN,CAACC,EAAM9G,OAAOgD,KAEbtC,EAAOiG,GAEP,kBAAC,EAAD,aAMA7F,EAAQ6F,GAER,kBAAC,EAAD,eAMF,kBAAC,EAAD,CAAWhK,SAAU,MACnB,kBAAC,GAAD,KACE,yBAAKE,UAAWC,KAAOqC,MACrB,yBAAKtC,UAAWC,KAAOiK,aACpB5H,EAAKyD,OAER,yBAAK/F,UAAWC,KAAOkK,cACvB,yBAAKnE,IAAG,WAAM1D,EAAK2D,UAAYC,IAAI,KACjC,uBAAGlG,UAAWC,KAAOmG,WAClB9D,EAAK+D,OAGV,6BACA,kBAAC,GAAD,CAAU8C,SAAU7G,EAAK6G,SAAU7B,OAAQ2C,EAAM9G,OAAOgD,W,wCC5BnDiE,GAXE,SAAC/J,GAAD,OACf,2BACEL,UAAWM,IAAGL,KAAOoK,SAAR,eAAqBhK,EAAML,UAAYK,EAAML,YAC1DQ,MAAOH,EAAMG,MACbC,SAAUJ,EAAMI,SAEhBG,YAAaP,EAAMO,YACnBF,KAAK,U,6kBCDT,IAwEewD,gBAAQ,SAACC,GAAD,MAAY,CACjCmG,iBAAkBnG,EAAM7B,KAAKgI,oBAC3B,CACF5H,OVxBoB,SAAC6E,GAAD,OAAc,SAAChD,GACnCA,EAfyB,CACzB7D,KAAMiH,KAeNgB,GAAmBpB,GACP7C,MAAK,SAACC,GAAD,OAASJ,GAdLK,EAc4BD,EAAIC,KAdtB,CAC/BlE,KAAMiH,GACN/C,UAFoB,IAACA,KAeTG,OAAM,SAACC,GAAD,OAAST,EAXG,CAC9B7D,KAAMiH,GACNzC,MASgDF,SUqBhDuF,gBV5B6B,iBAAO,CACpC7J,KAAMiH,MUuBOzD,EAxEQ,SAAC,GAAmD,IAAjDoG,EAAgD,EAAhDA,iBAAkB5H,EAA8B,EAA9BA,OAAQ6H,EAAsB,EAAtBA,gBAElDpC,qBAAU,WACR,OAAOoC,IACP,IAJsE,MAM1CpF,mBAAS,IANiC,mBAMjEqF,EANiE,KAMxDC,EANwD,KAelEhK,EAAW,SAAC6E,GAAD,OAAS,SAACC,GACzBkF,EAAW,MAAKD,EAAN,eAAgBlF,EAAMC,EAAEC,OAAOhF,WAarCkK,EAAmB3G,EAAauG,KAAsBE,EAAQzE,QAAUyE,EAAQnE,KAEtF,OACE,kBAAC,EAAD,CAAWvG,SAAU,MACnB,kBAAC,GAAD,KACE,yBAAKE,UAAWC,KAAO0K,aACrB,yBAAK3K,UAAWC,KAAO2K,uBACrB,4CAGA,kBAAC,EAAD,CACEhK,YAAa,QACbJ,MAAOgK,EAAQzE,MACftF,SAAUA,EAAS,SACnBT,UAAWC,KAAOM,QAEpB,kBAAC,GAAD,CACEC,MAAOgK,EAAQnE,KACf5F,SAAUA,EAAS,QACnBoK,cAAe,CAAEjK,YAAa,QAC9BA,YAAa,OACbZ,UAAWC,KAAOM,QAEpB,kBAAC,EAAD,CACEE,SA7Ca,SAAC8E,GACxBA,EAAEuF,iBACF,IAAIC,EAAOxF,EAAEC,OAAOwF,MAAM,GAE1BP,EAAW,MAAKD,EAAN,CAAeS,UAAWF,MA0C1BrK,KAAM,OACNV,UAAWC,KAAOM,MAClBI,OAAO,qCAERoD,EAAauG,GACZ,qCAEA,kBAAC,EAAD,CAAQtJ,SAAU0J,EAAkB3J,QA1CvB,WACvB,IAAMwG,EAAW,IAAI2D,SAErB3D,EAAS4D,OAAO,YAAaX,EAAQS,WACrC1D,EAAS4D,OAAO,QAASX,EAAQzE,OACjCwB,EAAS4D,OAAO,OAAQX,EAAQnE,MAEhC3D,EAAO6E,IAmCkE7G,KAAK,SAASV,UAAWC,KAAOa,QAA/F,sBC9CCoD,gBAAQ,SAACC,EAAOiH,GAAR,MAAsB,CAC3CC,iBAAkBlH,EAAMnC,KAAKqJ,iBAC7BjH,OAAQD,EAAMnC,KAAKoC,OACnBkH,WAAYF,KACV,GAJWlH,EApBM,SAAC,GAA8C,IAA5CmH,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,WAAYlH,EAAa,EAAbA,OAEpD,OAAKA,GAAWP,EAAOwH,GAMnBjH,GAAUJ,EAAUqH,GAEpB,kBAAC,IAAUC,GAIb,kBAAC,EAAD,aAVE,kBAAC,IAAD,CAAU5F,GAAI,aCCL6F,GARE,WACf,OACE,kBAAC,GAAD,KACE,qC,+NCIN,IAmCerH,gBAAQ,SAACC,GAAD,MAAY,CACjCqH,aAAcrH,EAAMnC,KAAKwJ,gBACvB,CACFC,WlBmBwB,SAAC,GAAD,IAAGnI,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUgF,EAApB,EAAoBA,KAApB,OAA+B,SAAChE,GACxDA,EAf6B,CAC7B7D,KAAM8D,IHhDc,SAAC,GAA+B,IAA7BlB,EAA4B,EAA5BA,MAAOiF,EAAqB,EAArBA,KAAMhF,EAAe,EAAfA,SACpC,OAAOL,EAAYnB,EAAMC,KAAKE,OAAQ,CAAEoB,QAAOiF,OAAMhF,aAAY,GG8DjEkB,CAAmB,CAAEnB,QAAOC,WAAUgF,SAC1B7D,MAAK,SAACC,GAAD,OAASJ,GAdDK,EAc4BD,EAAIC,KAdtB,CACnClE,KAAM8D,EACNI,UAFwB,IAACA,KAebG,OAAM,SAACC,GAAD,OAAST,EAXO,CAClC7D,KAAM8D,EACNU,MASoDF,SkBtBpD0G,gBlBe6B,iBAAO,CACpChL,KAAM8D,KkBpBON,EAnCM,SAAC,GAAmD,IAAjDuH,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,gBAAiBF,EAAmB,EAAnBA,aAEnDrD,qBAAU,WACR,OAAOuD,IACN,IAJmE,MAMtCvG,mBAAS,CAAE7B,MAAO,GAAIC,SAAU,GAAIgF,KAAM,KANJ,mBAM/DnD,EAN+D,KAMrDC,EANqD,KAOhE5E,EAAW,SAAC6E,GAAD,OAAS,SAACC,GAAD,OAAOF,E,2WAAY,IAAKD,EAAN,eAAiBE,EAAMC,EAAEC,OAAOhF,WAMtEiF,GAAiBL,EAAS9B,QAAU8B,EAAS7B,UAAYQ,EAAayH,GAC5E,OACE,kBAAC,EAAD,CAAW1L,SAAU,MACnB,yBAAKE,UAAWC,IAAO0F,WACrB,yBAAK3F,UAAWC,IAAO2F,gBACrB,+CACA,kBAAC,EAAD,CAAOhF,YAAa,QAASJ,MAAO4E,EAAS9B,MAAO7C,SAAUA,EAAS,SAAUT,UAAWC,IAAOM,QACnG,kBAAC,EAAD,CAAOK,YAAa,OAAQJ,MAAO4E,EAASmD,KAAM9H,SAAUA,EAAS,QAAST,UAAWC,IAAOM,QAChG,kBAAC,EAAD,CAAOK,YAAa,WAAYJ,MAAO4E,EAAS7B,SAAU9C,SAAUA,EAAS,YACtET,UAAWC,IAAOM,QAExBwD,EAAayH,GAAgB,qCAC5B,kBAAC,EAAD,CAAQxK,SAAUyE,EAAezF,UAAWC,IAAOa,OAAQC,QAjBpD,WACXqE,EAAS9B,OAAS8B,EAAS7B,UAC7BkI,EAAWrG,KAeL,kBAEDnB,EAAQuH,IAAiB,sCACzBxH,EAAUwH,IAAiB,gDAAqB,kBAAC,IAAD,CAAM9F,GAAI,SAAV,iBCb5CxB,gBAAQ,cACpB,CAAE/B,WnBgBqB,kBAAM,SAACoC,GAC/BA,EAZ6B,CAC7B7D,KAAM8D,IHrBCtB,EAAYnB,EAAMC,KAAKG,WAAY,IAAI,GGkClCuC,MAAK,SAACC,GAAD,OAASJ,GAXDK,EAW4BD,EAAIC,KAXtB,CACnClE,KAAM8D,EACNI,UAFwB,IAACA,KAYbG,OAAM,SAACC,GACNnD,aAAaoD,QACbV,EAVqB,CAClC7D,KAAM8D,EACNU,MAQsCF,UmBvBzBd,EAbH,SAAC,GAAoB,IAAlB/B,EAAiB,EAAjBA,WAEb,OADAgG,oBAAUhG,EAAY,IAEpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwJ,KAAM,QAASC,UAAWC,KACjC,kBAAC,IAAD,CAAOF,KAAM,gBAAiBC,UAAWE,KACzC,kBAAC,GAAD,CAAcC,OAAO,EAAMJ,KAAM,IAAKC,UAAWI,KACjD,kBAAC,GAAD,CAAcL,KAAM,aAAcC,UAAWK,KAC7C,kBAAC,GAAD,CAAcN,KAAM,eAAgBC,UAAWM,KAC/C,kBAAC,GAAD,CAAcN,UAAWL,S,+mBClB/B,IAAMY,GAAY,CAChB/H,QAAQ,EACRC,WAAYb,EAAcC,WAC1B4H,iBAAkB7H,EAAcC,WAChC+H,aAAchI,EAAcC,YAGf,SAASzB,KAAiC,IAA5BoK,EAA2B,uDAAnBD,GACnC,QADsD,wCACvCzL,MAEb,KAAK8D,EACH,OAAO,MACF4H,EADL,CAEE/H,WAAYb,EAAcE,aAE9B,KAAKc,EACH,OAAO,MACF4H,EADL,CAEE/H,WAAYb,EAAcG,QAC1B0H,iBAAkB7H,EAAcG,QAChCS,QAAQ,IAEZ,KAAKI,EACH,OAAO,MACF4H,EADL,CAEEhI,QAAQ,EACRC,WAAYb,EAAcI,QAG9B,KAAKY,EACH,OAAO,MACF4H,EADL,CAEEf,iBAAkB7H,EAAcE,aAEpC,KAAKc,EACH,OAAO,MACF4H,EADL,CAEEf,iBAAkB7H,EAAcG,QAChCS,QAAQ,IAEZ,KAAKI,EACH,OAAO,MACF4H,EADL,CAEEhI,QAAQ,EACRiH,iBAAkB7H,EAAcI,QAGpC,KAAKY,EACH,OAAO,MACF4H,EADL,CAEEZ,aAAchI,EAAcE,aAEhC,KAAKc,EACH,OAAO,MACF4H,EADL,CAEEZ,aAAchI,EAAcG,UAEhC,KAAKa,EACH,OAAO,MACF4H,EADL,CAEEhI,QAAQ,EACRoH,aAAchI,EAAcI,QAEhC,KAAKY,EACH,OAAO,MACF4H,EADL,CAEEhI,QAAQ,EACRoH,aAAchI,EAAcC,aAEhC,QACE,OAAO2I,G,0lBCtEb,IAAMC,GAAY,CAChB5D,MAAO,KACPC,YAAalF,EAAcC,WAC3ByF,aAAc,KACda,mBAAoBvG,EAAcC,WAClC6G,iBAAkB9G,EAAcC,WAChCuF,kBAAmBxF,EAAcC,WACjC2F,qBAAsB5F,EAAcC,YAGvB,SAASnB,KAAiC,IAA5B8J,EAA2B,uDAAnBC,GAAWC,EAAQ,uCACtD,OAAQA,EAAO5L,MAEb,KAAKiH,GACH,OAAO,MACFyE,EADL,CAEE1D,YAAalF,EAAcE,aAE/B,KAAKiE,GACH,OAAO,MACFyE,EADL,CAEE1D,YAAalF,EAAcG,QAC3B8E,MAAO6D,EAAO1H,OAElB,KAAK+C,GACH,OAAO,MACFyE,EADL,CAEE1D,YAAalF,EAAcI,QAG/B,KAAK+D,GACH,OAAO,MACFyE,EADL,CAEErC,mBAAoBvG,EAAcE,aAEtC,KAAKiE,GACH,OAAO,MACFyE,EADL,CAEErC,mBAAoBvG,EAAcG,QAClCuF,aAAcoD,EAAO1H,OAEzB,KAAK+C,GACH,OAAO,MACFyE,EADL,CAEErC,mBAAoBvG,EAAcI,QAEtC,KAAK+D,GACH,OAAO,MACFyE,EADL,CAEErC,mBAAoBvG,EAAcC,WAClCuF,kBAAmBxF,EAAcC,WACjC2F,qBAAsB5F,EAAcC,WACpCyF,aAAc,OAGlB,KAAKvB,GACH,OAAO,MACFyE,EADL,CAEE9B,iBAAkB9G,EAAcE,aAEpC,KAAKiE,GACH,OAAO,MACFyE,EADL,CAEE9B,iBAAkB9G,EAAcG,UAEpC,KAAKgE,GACH,OAAO,MACFyE,EADL,CAEE9B,iBAAkB9G,EAAcI,QAEpC,KAAK+D,GACH,OAAO,MACFyE,EADL,CAEE9B,iBAAkB9G,EAAcC,WAChCyF,aAAc,OAGlB,KAAKvB,GACH,OAAO,MACFyE,EADL,CAEEpD,kBAAmBxF,EAAcE,aAErC,KAAKiE,GACH,OAAO,MACFyE,EADL,CAEEpD,kBAAmBxF,EAAcG,QACjCuF,aAAa,MAAMkD,EAAMlD,aAAb,CAA2BC,SAAUmD,EAAO1H,SAE5D,KAAK+C,GACH,OAAO,MACFyE,EADL,CAEEpD,kBAAmBxF,EAAcI,QAGrC,KAAK+D,GACH,OAAO,MACFyE,EADL,CAEEhD,qBAAsB5F,EAAcE,aAExC,KAAKiE,GACH,OAAO,MACFyE,EADL,CAEEhD,qBAAsB5F,EAAcG,QACpCuF,aAAa,MAAMkD,EAAMlD,aAAb,CAA2BC,SAAS,GAAD,oBAAMiD,EAAMlD,aAAaC,UAAzB,CAAmCmD,EAAO1H,WAE7F,QACE,OAAOwH,G,6kBC1Gb,IAAMG,GAAY,CAChBnK,KAAM,KACN4F,WAAYxE,EAAcC,YAGb,SAASrB,KAAiC,IAA5BgK,EAA2B,uDAAnBG,GAAWD,EAAQ,uCACtD,OAAQA,EAAO5L,MAEb,KAAKuH,GACH,OAAO,MACFmE,EADL,CAEEpE,WAAYxE,EAAcE,aAE9B,KAAKuE,GACH,OAAO,MACFmE,EADL,CAEEpE,WAAYxE,EAAcG,QAC1BvB,KAAMkK,EAAO1H,OAEjB,KAAKqD,GACH,OAAO,MACFmE,EADL,CAEEpE,WAAYxE,EAAcI,QAE9B,QACE,OAAOwI,GCvBb,IAQeI,GARW,kBACxBC,aAAgB,CACdzK,QACAM,QACAF,WCTJ,yCAWA,IAAMsK,GAAUC,eACVxI,GAAQyI,aAAYC,GAAYH,IAAUI,aAAgBC,OAIhEC,IAASC,OACP,kBAAC,IAAD,CAAU9I,MAAOA,IACf,kBAAC,IAAD,CAAQuI,QAASC,gBACf,kBAAC,GAAD,QAESO,SAASC,eAAe,W","file":"static/js/main.c70a3766.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__2XSAU\",\"button\":\"styles_button__NI2aw\",\"auth_container\":\"styles_auth_container__3nIHD\",\"auth_wrap\":\"styles_auth_wrap__3FhLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"create_post\":\"styles_create_post__1YIT3\",\"create_post_container\":\"styles_create_post_container__qWcKM\",\"input\":\"styles_input__2P84y\",\"button\":\"styles_button__1V1vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2dQfB\",\"header_item\":\"styles_header_item__23gs7\",\"user_block\":\"styles_user_block__2GfqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_header\":\"styles_post_header__YZ153\",\"post_content\":\"styles_post_content__2ZuCv\",\"post_img\":\"styles_post_img__3rgxe\",\"post_text\":\"styles_post_text__4Y8bB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"styles_comments__1RnZq\",\"comments_block\":\"styles_comments_block__3bVN1\",\"comments_list\":\"styles_comments_list__Yt6Xe\",\"comments_list_item\":\"styles_comments_list_item__1_9kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"styles_post__3BqCS\",\"post_title\":\"styles_post_title__2MOY_\",\"post_text\":\"styles_post_text__O8S-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_page\":\"styles_post_page__Zm75e\",\"post_page_item\":\"styles_post_page_item__3cysC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1ncd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__3I9lN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1M9-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"styles_textarea__U8r4W\"};","import React from 'react'\nimport styles from './style.module.scss'\n\nconst Container = ({ maxWidth = 1200, children }) => {\n  return (\n    <div className={styles.container} style={{ maxWidth }}>\n      {children}\n    </div>\n  )\n}\n\nexport default Container\n","import React from 'react'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nconst Input = (props) => (\n  <input\n    className={cn(styles.input, { [props.className]: props.className })}\n    value={props.value}\n    onChange={props.onChange}\n    type={props.type || 'text'}\n    accept={props.accept || ''}\n    placeholder={props.placeholder}\n  />\n)\n\nexport default Input\n","import React from 'react'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nconst Button = (props) => (\n  <button\n    className={cn(styles.button, { [props.className || '']: props.className })}\n    onClick={props.onClick}\n    type=\"text\"\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n)\n\nexport default Button\n","export const AUTH_SIGN_IN_START = 'AUTH_SIGN_IN_START';\nexport const AUTH_SIGN_IN_SUCCESS = 'AUTH_SIGN_IN_SUCCESS';\nexport const AUTH_SIGN_IN_ERROR = 'AUTH_SIGN_IN_ERROR';\n\nexport const CHECK_TOKEN_START = 'CHECK_TOKEN_START';\nexport const CHECK_TOKEN_SUCCESS = 'CHECK_TOKEN_SUCCESS';\nexport const CHECK_TOKEN_ERROR = 'CHECK_TOKEN_ERROR';\n\nexport const AUTH_SIGN_UP_START = 'AUTH_SIGN_UP_START';\nexport const AUTH_SIGN_UP_SUCCESS = 'AUTH_SIGN_UP_SUCCESS';\nexport const AUTH_SIGN_UP_ERROR = 'AUTH_SIGN_UP_ERROR';\nexport const AUTH_SIGN_UP_CLEAR = 'AUTH_SIGN_UP_CLEAR';\n","import axios from 'axios'\n\nconst domain = 'http://localhost:5000'\nconst api = 'api'\nconst url = `${domain}/${api}`\n\nexport const authTokenName = 'AUTH_TOKEN'\nexport const getToken = () => localStorage.getItem(authTokenName)\n\nconst paths = {\n  auth: {\n    signIn: `${url}/auth/signin`,\n    signUp: `${url}/auth/signup`,\n    checkToken: `${url}/auth/checkToken`\n  },\n  user: {\n    getUser: `${url}/user`\n  },\n  post: {\n    getAll: `${url}/post/getAll`,\n    getOne: `${url}/post/getOne`,\n    getByUserID: `${url}/post/getById`,\n    create: `${url}/post/create`\n  },\n  comment: {\n    getAll: `${url}/comment/getByPostId`,\n    create: `${url}/comment/create`\n  }\n}\n\nexport const requestGet = (url, isPrivate, headers = {}) => {\n  return axios.get(url, {\n    headers: {\n      authorization: isPrivate ? getToken() : null,\n      ...headers\n    }\n  })\n}\n\nexport const requestPost = (url, params, isPrivate, headers = {}) => {\n  return axios.post(url, params, {\n    headers: {\n      authorization: isPrivate ? getToken() : null,\n      ...headers\n    }\n  })\n}\n\nexport default paths\n\n","import paths, { requestPost } from './index'\n\nexport const  singIn = async ({ login, password }) => {\n  return await requestPost(paths.auth.signIn, { login, password }, false)\n}\n\nexport const singUp = ({ login, name, password }) => {\n  return requestPost(paths.auth.signUp, { login, name, password }, false)\n}\n\nexport const checkToken = () => {\n  return requestPost(paths.auth.checkToken, {}, true)\n}\n\n","export const DATA_STATUSES = {\n  UN_TOUCHED: 'UN_TOUCHED',\n  REQUESTING: 'REQUESTING',\n  SUCCESS: 'SUCCESS',\n  ERROR: 'ERROR'\n}\n\nexport const isLoad = (status) => status === DATA_STATUSES.REQUESTING || status === DATA_STATUSES.UN_TOUCHED\nexport const isRequesting = (status) => status === DATA_STATUSES.REQUESTING\nexport const isSuccess = (status) => status === DATA_STATUSES.SUCCESS\nexport const isError = (status) => status === DATA_STATUSES.ERROR\nexport const isUntouched = (status) => status === DATA_STATUSES.UN_TOUCHED\n","import React, { useState } from 'react'\nimport Container from '../../components/common/Container/Container'\nimport Input from '../../components/common/Input/Input'\nimport Button from '../../components/common/Button/Input'\nimport styles from './styles.module.scss'\nimport { connect } from 'react-redux'\nimport { authSignIn } from '../../state/auth/actions'\nimport { isError, isRequesting } from '../../utils'\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nfunction AuthPage({ isAuth, authStatus, authSignIn }) {\n\n  const [authData, setAuthData] = useState({ login: '', password: '' })\n  const onChange = (key) => (e) => setAuthData({ ...authData, [key]: e.target.value })\n  const onSubmit = () => {\n    if (authData.login && authData.password) {\n      authSignIn(authData)\n    }\n  }\n\n  const isButtonBlock = !authData.login || !authData.password || isRequesting(authStatus)\n  if(isAuth){\n    return <Redirect to={'/'}/>\n  }\n  return (\n    <Container maxWidth={1200}>\n      <div className={styles.auth_wrap}>\n        <div className={styles.auth_container}>\n          <div>Sign in</div>\n          <Input placeholder={'login'} value={authData.login} onChange={onChange('login')} className={styles.input}/>\n          <Input placeholder={'password'} value={authData.password} onChange={onChange('password')} className={styles.input}/>\n          {isRequesting(authStatus) && <div>Wait</div>}\n          {isError(authStatus) && <div>Error</div>}\n          <Link to={'/registration'}>Create account</Link>\n          <Button disabled={isButtonBlock} className={styles.button} onClick={onSubmit}>Log in</Button>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default connect((store) => ({\n  isAuth: store.auth.isAuth,\n  authStatus: store.auth.authStatus\n}), {\n  authSignIn\n})(AuthPage)\n","import * as authConstants from './constants'\nimport * as authService from '../../service/auth'\nimport { authTokenName } from '../../service'\n\n// login\nconst authSignInStart = () => ({\n  type: authConstants.AUTH_SIGN_IN_START\n})\nconst authSignInSuccess = (data) => ({\n  type: authConstants.AUTH_SIGN_IN_SUCCESS,\n  data\n})\nconst authSignInError = (error) => ({\n  type: authConstants.AUTH_SIGN_IN_ERROR,\n  error\n})\nexport const authSignIn = ({ login, password }) => (dispatch) => {\n  dispatch(authSignInStart())\n  authService.singIn({ login, password })\n             .then((res) => {\n               localStorage.setItem(authTokenName, res.data.token)\n               dispatch(authSignInSuccess(res.data))\n             })\n             .catch((err) => {\n               localStorage.clear()\n               dispatch(authSignInError(err))\n             })\n}\n\n\n// check token\nconst checkTokenStart = () => ({\n  type: authConstants.CHECK_TOKEN_START\n})\nconst checkTokenSuccess = (data) => ({\n  type: authConstants.CHECK_TOKEN_SUCCESS,\n  data\n})\nconst checkTokenError = (error) => ({\n  type: authConstants.CHECK_TOKEN_ERROR,\n  error\n})\nexport const checkToken = () => (dispatch) => {\n  dispatch(checkTokenStart())\n  authService.checkToken()\n             .then((res) => dispatch(checkTokenSuccess(res.data)))\n             .catch((err) => {\n               localStorage.clear()\n               dispatch(checkTokenError(err))\n             })\n}\n\n// register\nconst authSignUpStart = () => ({\n  type: authConstants.AUTH_SIGN_UP_START\n})\nconst authSignUpSuccess = (data) => ({\n  type: authConstants.AUTH_SIGN_UP_SUCCESS,\n  data\n})\nconst authSignUpError = (error) => ({\n  type: authConstants.AUTH_SIGN_UP_ERROR,\n  error\n})\nexport const authSignUpClear = () => ({\n  type: authConstants.AUTH_SIGN_UP_CLEAR\n})\nexport const authSignUp = ({ login, password, name }) => (dispatch) => {\n  dispatch(authSignUpStart())\n  authService.singUp({ login, password, name })\n             .then((res) => dispatch(authSignUpSuccess(res.data)))\n             .catch((err) => dispatch(authSignUpError(err)))\n}\n\n","import React from 'react'\nimport styles from './styles.module.scss'\nimport { Link } from 'react-router-dom'\n\nconst Post = ({ data }) => {\n  return (\n    <div className={styles.post}>\n      <h2 className={styles.post_title}>{data.title}</h2>\n      <img src={`/${data.imageUrl}`} alt=\"\"/>\n      <Link to={`/posts/${data.id}`} className={styles.post_text}>{data.text}</Link>\n    </div>\n  )\n}\n\nexport default Post\n","export const GET_ALL_START = 'GET_ALL_START'\nexport const GET_ALL_SUCCESS = 'GET_ALL_SUCCESS'\nexport const GET_ALL_ERROR = 'GET_ALL_ERROR'\n\nexport const GET_ONE_START = 'GET_ONE_START'\nexport const GET_ONE_SUCCESS = 'GET_ONE_SUCCESS'\nexport const GET_ONE_ERROR = 'GET_ONE_ERROR'\nexport const CLEAR_POST = 'CLEAR_POST'\n\nexport const CREATE_POST_START = 'CREATE_POST_START'\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS'\nexport const CREATE_POST_ERROR = 'CREATE_POST_ERROR'\nexport const CREATE_POST_CLEAR = 'CREATE_POST_CLEAR'\n\nexport const GET_COMMENTS_START = 'GET_COMMENTS_START'\nexport const GET_COMMENTS_SUCCESS = 'GET_COMMENTS_SUCCESS'\nexport const GET_COMMENTS_ERROR = 'GET_COMMENTS_ERROR'\n\nexport const CREATE_COMMENT_START = 'CREATE_COMMENT_START'\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS'\nexport const CREATE_COMMENT_ERROR = 'CREATE_COMMENT_ERROR'\nexport const CREATE_COMMENT_CLEAR = 'CREATE_COMMENT_CLEAR'\n","import paths, { requestGet, requestPost } from './index'\n\nexport const getAll = async () => {\n  return await requestGet(paths.post.getAll, true)\n}\n\nexport const getOne = async (postID) => {\n  return await requestGet(`${paths.post.getOne}/${postID}`, true)\n}\n\nexport const create = async (formData) => {\n  return await requestPost(paths.post.create, formData, true, {'Content-Type': 'multipart/form-data'})\n}\n\n\n","import paths, { requestGet, requestPost } from './index'\n\nexport const getAll = async (postID) => {\n  return await requestGet(`${paths.comment.getAll}/${postID}`, true)\n}\n\nexport const create = async ({ author, text, authorID, postID }) => {\n  return await requestPost(`${paths.comment.create}/${postID}`, { author, text, authorID }, true)\n}\n","import * as postConstants from './constants'\nimport * as postService from '../../service/post'\nimport * as commentsService from '../../service/comments'\n\n// get all\nconst getAllStart = () => ({\n  type: postConstants.GET_ALL_START\n})\nconst getAllSuccess = (data) => ({\n  type: postConstants.GET_ALL_SUCCESS,\n  data\n})\nconst getAllError = (error) => ({\n  type: postConstants.GET_ALL_ERROR,\n  error\n})\nexport const getAll = () => (dispatch) => {\n  dispatch(getAllStart())\n  postService.getAll()\n             .then((res) => dispatch(getAllSuccess(res.data)))\n             .catch((err) => dispatch(getAllError(err)))\n}\n\n// get one\nconst getOneStart = () => ({\n  type: postConstants.GET_ONE_START\n})\nconst getOneSuccess = (data) => ({\n  type: postConstants.GET_ONE_SUCCESS,\n  data\n})\nconst getOneError = (error) => ({\n  type: postConstants.GET_ONE_ERROR,\n  error\n})\nexport const getOne = (postID) => (dispatch) => {\n  dispatch(getOneStart())\n  postService.getOne(postID)\n             .then((res) => dispatch(getOneSuccess(res.data)))\n             .catch((err) => dispatch(getOneError(err)))\n}\n\n// clear post\nexport const clearPost = () => ({\n  type: postConstants.CLEAR_POST\n})\n\n// create post\nconst createStart = () => ({\n  type: postConstants.CREATE_POST_START\n})\nconst createSuccess = (data) => ({\n  type: postConstants.CREATE_POST_SUCCESS,\n  data\n})\nconst createError = (error) => ({\n  type: postConstants.CREATE_POST_ERROR,\n  error\n})\nexport const createPostClear = () => ({\n  type: postConstants.CREATE_POST_CLEAR\n})\nexport const create = (formData) => (dispatch) => {\n  dispatch(createStart())\n  postService.create(formData)\n             .then((res) => dispatch(createSuccess(res.data)))\n             .catch((err) => dispatch(createError(err)))\n}\n\n// get comments\nconst getCommentsStart = () => ({\n  type: postConstants.GET_COMMENTS_START\n})\nconst getCommentsSuccess = (data) => ({\n  type: postConstants.GET_COMMENTS_SUCCESS,\n  data\n})\nconst getCommentsError = (error) => ({\n  type: postConstants.GET_COMMENTS_ERROR,\n  error\n})\nexport const getComments = (postID) => (dispatch) => {\n  dispatch(getCommentsStart())\n  commentsService.getAll(postID)\n                 .then((res) => dispatch(getCommentsSuccess(res.data)))\n                 .catch((err) => dispatch(getCommentsError(err)))\n}\n\n// create comment\nconst createCommentsStart = () => ({\n  type: postConstants.CREATE_COMMENT_START\n})\nconst createCommentsSuccess = (data) => ({\n  type: postConstants.CREATE_COMMENT_SUCCESS,\n  data\n})\nconst createCommentsError = (error) => ({\n  type: postConstants.CREATE_COMMENT_ERROR,\n  error\n})\nexport const createCommentsClear = (error) => ({\n  type: postConstants.CREATE_COMMENT_CLEAR,\n})\nexport const createComment = ({ author, text, authorID, postID }) => (dispatch) => {\n  dispatch(createCommentsStart())\n  commentsService.create({ author, text, authorID, postID })\n                 .then((res) => dispatch(createCommentsSuccess(res.data)))\n                 .catch((err) => dispatch(createCommentsError(err)))\n}\n","export const GET_USER_START = 'GET_USER_START';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_ERROR = 'GET_USER_ERROR';\n","import paths, { requestGet, requestPost } from './index'\n\nexport const getUser = async () => {\n  return await requestGet(paths.user.getUser, true)\n}\n","import React, { useEffect } from 'react'\nimport styles from './styles.module.scss'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getUser } from '../../state/user/actions'\nimport { isSuccess } from '../../utils'\n\n\nconst Header = ({ getUser, userStatus, user }) => {\n  useEffect(getUser, [])\n  return (\n    <div className={styles.header}>\n      <Link className={styles.header_item} to={'/'}>Posts</Link>\n      <Link className={styles.header_item} to={'/create-post'}>Create Post</Link>\n      {isSuccess(userStatus) && (\n        <div className={styles.user_block}>\n          Hello <span>{user.name}</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default connect((store) => ({\n  userStatus: store.user.userStatus,\n  user: store.user.user\n}), {\n  getUser\n})(Header)\n","// get one\nimport * as userConstants from './constants'\nimport * as userService from '../../service/user'\n\nconst getUserStart = () => ({\n  type: userConstants.GET_USER_START\n})\nconst getUserSuccess = (data) => ({\n  type: userConstants.GET_USER_SUCCESS,\n  data\n})\nconst getUserError = (error) => ({\n  type: userConstants.GET_USER_ERROR,\n  error\n})\nexport const getUser = (postID) => (dispatch) => {\n  dispatch(getUserStart())\n  userService.getUser(postID)\n             .then((res) => dispatch(getUserSuccess(res.data)))\n             .catch((err) => dispatch(getUserError(err)))\n}\n","import React from 'react'\nimport Header from '../../Header/Header'\n\nconst Layout = ({ children }) => {\n  return (\n    <div>\n      <Header/>\n      {children}\n    </div>\n  )\n}\n\nexport default Layout\n","import React, { useEffect } from 'react'\nimport Container from '../../components/common/Container/Container'\nimport styles from './styles.module.scss'\nimport Post from '../../components/Post/Post'\nimport { getAll } from '../../state/post/actions'\nimport { connect } from 'react-redux'\nimport { isError, isLoad } from '../../utils'\nimport Layout from '../../components/common/Layout/Layout'\n\nconst PostPage = ({ posts, postsStatus, getAll }) => {\n  useEffect(getAll, [])\n  if (isLoad(postsStatus)) {\n    return (\n      <Container>\n        Wait\n      </Container>\n    )\n  }\n  if (isError(postsStatus)) {\n    return (\n      <Container>\n        Error!\n      </Container>\n    )\n  }\n  return (\n    <Container>\n      <Layout>\n        <div className={styles.post_page}>\n          {posts.map((p) => (\n            <div key={p.id} className={styles.post_page_item}>\n              <Post data={p}/>\n            </div>\n          ))}\n        </div>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default connect((store) => ({\n    posts: store.post.posts,\n    postsStatus: store.post.postsStatus\n  }),\n  {\n    getAll\n  })(PostPage)\n","import React, { useEffect, useState } from 'react'\nimport { createComment, createCommentsClear, getComments } from '../../state/post/actions'\nimport { connect } from 'react-redux'\nimport Input from '../common/Input/Input'\nimport Button from '../common/Button/Input'\nimport styles from './styles.module.scss'\nimport { isSuccess } from '../../utils'\n\nconst Comments = ({ getComments, postID, postComments, getCommentsStatus, user, createComment, createCommentsStatus, createCommentsClear }) => {\n\n  useEffect(() => {\n    getComments(postID)\n    return createCommentsClear\n  }, [postID])\n\n  const [comment, setComment] = useState('')\n  const handleChange = (e) => setComment(e.target.value)\n\n  const handleCreateComment = () => {\n    createComment({ author: user.name, text: comment, authorID: user._id, postID })\n    setComment('')\n  }\n\n  return (\n    <div className={styles.comments}>\n      <div className={styles.comments_block}>\n        <Input placeholder={'Comment'} value={comment} onChange={handleChange}/>\n        <Button onClick={handleCreateComment}>Send comment</Button>\n      </div>\n\n      <div className={styles.comments_list}>\n\n        {isSuccess(getCommentsStatus) && (\n          postComments.map((c) => (\n            <div className={styles.comments_list_item}>\n              <h3>{c.author}</h3>\n              <p>{c.text}</p>\n            </div>\n          ))\n        )}\n\n        {isSuccess(getCommentsStatus) && !postComments.length && (\n          <div>\n            No comments\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default connect((store) => ({\n  getCommentsStatus: store.post.getCommentsStatus,\n  postComments: store.post.selectedPost.comments,\n  user: store.user.user,\n  createCommentsStatus: store.post.createCommentsStatus\n}), {\n  getComments,\n  createComment,\n  createCommentsClear\n})(Comments)\n","import React, { useEffect } from 'react'\nimport Container from '../../components/common/Container/Container'\nimport styles from './styles.module.scss'\nimport { connect } from 'react-redux'\nimport { clearPost, getComments, getOne } from '../../state/post/actions'\nimport { isError, isLoad } from '../../utils'\nimport Layout from '../../components/common/Layout/Layout'\nimport Comments from '../../components/Comments/Comments'\n\nconst SinglePostPage = ({ match, getOne, post, postStatus, clearPost}) => {\n  useEffect(() => {\n    getOne(match.params.id)\n    return clearPost\n  }, [match.params.id])\n\n  if (isLoad(postStatus)) {\n    return (\n      <Container>\n        Wait\n      </Container>\n    )\n  }\n\n  if (isError(postStatus)) {\n    return (\n      <Container>\n        Error!\n      </Container>\n    )\n  }\n  return (\n    <Container maxWidth={1200}>\n      <Layout>\n        <div className={styles.post}>\n          <div className={styles.post_header}>\n            {post.title}\n          </div>\n          <div className={styles.post_content}>\n          <img src={`/${post.imageUrl}`} alt=\"\"/>\n            <p className={styles.post_text}>\n              {post.text}\n            </p>\n          </div>\n          <br/>\n          <Comments comments={post.comments} postID={match.params.id}/>\n        </div>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default connect((store) => ({\n    post: store.post.selectedPost,\n    postStatus: store.post.selectedPostStatus\n}),\n  {\n    getOne,\n    clearPost,\n    getComments\n  })(SinglePostPage)\n","import React from 'react'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nconst TextArea = (props) => (\n  <input\n    className={cn(styles.textarea, { [props.className]: props.className })}\n    value={props.value}\n    onChange={props.onChange}\n\n    placeholder={props.placeholder}\n    type=\"text\"\n  />\n)\n\nexport default TextArea\n","import React, { useState, useEffect } from 'react'\nimport Container from '../../components/common/Container/Container'\nimport styles from './styles.module.scss'\nimport Input from '../../components/common/Input/Input'\nimport Button from '../../components/common/Button/Input'\nimport TextArea from '../../components/common/TextArea/TextArea'\nimport { create, createPostClear } from '../../state/post/actions'\nimport { connect } from 'react-redux'\nimport Layout from '../../components/common/Layout/Layout'\nimport { isRequesting } from '../../utils'\n\nconst CreatePostPage = ({ createPostStatus, create, createPostClear }) => {\n\n  useEffect(() => {\n    return createPostClear\n  },[])\n\n  const [formObj, setFormObj] = useState({})\n\n  const handleSelectFile = (e) => {\n    e.preventDefault()\n    let file = e.target.files[0]\n\n    setFormObj({ ...formObj, postImage: file })\n  }\n\n  const onChange = (key) => (e) => {\n    setFormObj({ ...formObj, [key]: e.target.value })\n  }\n\n  const handleCreatePost = () => {\n    const formData = new FormData;\n\n    formData.append('postImage', formObj.postImage)\n    formData.append('title', formObj.title)\n    formData.append('text', formObj.text)\n\n    create(formData)\n  }\n\n  const isButtonDisabled = isRequesting(createPostStatus) || !formObj.title || !formObj.text\n\n  return (\n    <Container maxWidth={1200}>\n      <Layout>\n        <div className={styles.create_post}>\n          <div className={styles.create_post_container}>\n            <div>\n              Create post\n            </div>\n            <Input\n              placeholder={'title'}\n              value={formObj.title}\n              onChange={onChange('title')}\n              className={styles.input}\n            />\n            <TextArea\n              value={formObj.text}\n              onChange={onChange('text')}\n              textAreaProps={{ placeholder: 'Text' }}\n              placeholder={'Text'}\n              className={styles.input}\n            />\n            <Input\n              onChange={handleSelectFile}\n              type={'file'}\n              className={styles.input}\n              accept=\"image/x-png,image/gif,image/jpeg\"\n            />\n            {isRequesting(createPostStatus) ? (\n              <div>Wait</div>\n            ) : (\n              <Button disabled={isButtonDisabled} onClick={handleCreatePost} type='button' className={styles.button}>Create\n                post\n              </Button>\n            )}\n          </div>\n        </div>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default connect((store) => ({\n  createPostStatus: store.post.createPostStatus\n}), {\n  create,\n  createPostClear\n})(CreatePostPage)\n","import React from 'react'\nimport { isLoad, isSuccess } from '../../../utils'\nimport Container from '../Container/Container'\nimport { Redirect, Route } from 'react-router'\nimport { connect } from 'react-redux'\n\nconst PrivateRoute = ({ checkTokenStatus, routeProps, isAuth }) => {\n\n  if (!isAuth && !isLoad(checkTokenStatus)) {\n    return (\n      <Redirect to={'/auth'}/>\n    )\n  }\n\n  if (isAuth && isSuccess(checkTokenStatus)) {\n    return (\n      <Route {...routeProps} />\n    )\n  }\n  return (\n    <Container>\n      Wait\n    </Container>\n  )\n}\n\nexport default connect((store, ownProps) => ({\n  checkTokenStatus: store.auth.checkTokenStatus,\n  isAuth: store.auth.isAuth,\n  routeProps: ownProps\n}), {})(PrivateRoute)\n","import React from 'react'\nimport Layout from '../../components/common/Layout/Layout'\n\nconst NotFound = () => {\n  return(\n    <Layout>\n      <h1>404</h1>\n    </Layout>\n  )\n}\n\nexport default NotFound\n","import React, { useEffect, useState } from 'react'\nimport styles from '../auth-page/styles.module.scss'\nimport Input from '../../components/common/Input/Input'\nimport { isError, isRequesting, isSuccess } from '../../utils'\nimport Button from '../../components/common/Button/Input'\nimport Container from '../../components/common/Container/Container'\nimport { connect } from 'react-redux'\nimport { authSignUp, authSignUpClear } from '../../state/auth/actions'\nimport { Link } from 'react-router-dom'\n\nconst RegisterPage = ({ authSignUp, authSignUpClear, signUpStatus }) => {\n\n  useEffect(() => {\n    return authSignUpClear\n  }, [])\n\n  const [authData, setAuthData] = useState({ login: '', password: '', name: '' })\n  const onChange = (key) => (e) => setAuthData({ ...authData, [key]: e.target.value })\n  const onSubmit = () => {\n    if (authData.login && authData.password) {\n      authSignUp(authData)\n    }\n  }\n  const isButtonBlock = !authData.login || !authData.password || isRequesting(signUpStatus)\n  return (\n    <Container maxWidth={1200}>\n      <div className={styles.auth_wrap}>\n        <div className={styles.auth_container}>\n          <div>Create account</div>\n          <Input placeholder={'login'} value={authData.login} onChange={onChange('login')} className={styles.input}/>\n          <Input placeholder={'name'} value={authData.name} onChange={onChange('name')} className={styles.input}/>\n          <Input placeholder={'password'} value={authData.password} onChange={onChange('password')}\n                 className={styles.input}/>\n\n          {isRequesting(signUpStatus) ? <div>Wait</div> : (\n            <Button disabled={isButtonBlock} className={styles.button} onClick={onSubmit}>Create account</Button>\n          )}\n          {isError(signUpStatus) && <div>Error</div>}\n          {isSuccess(signUpStatus) && <div>Account created <Link to={'/auth'}>Log in</Link></div>}\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default connect((store) => ({\n  signUpStatus: store.auth.signUpStatus\n}), {\n  authSignUp,\n  authSignUpClear\n})(RegisterPage)\n","import React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router'\nimport AuthPage from './pages/auth-page/auth-page'\nimport PostPage from './pages/post-page/post-page'\nimport SinglePostPage from './pages/single-post-page/single-post-page'\nimport CreatePostPage from './pages/create-post-page/CreatePostPage'\nimport PrivateRoute from './components/common/PrivateRoute/PrivateRoute'\nimport { checkToken } from './state/auth/actions'\nimport { connect } from 'react-redux'\nimport NotFound from './pages/not-found-page'\nimport RegisterPage from './pages/register-page/RegisterPage'\n\nconst App = ({ checkToken }) => {\n  useEffect(checkToken, [])\n  return (\n    <Switch>\n      <Route path={'/auth'} component={AuthPage}/>\n      <Route path={'/registration'} component={RegisterPage}/>\n      <PrivateRoute exact={true} path={'/'} component={PostPage}/>\n      <PrivateRoute path={'/posts/:id'} component={SinglePostPage}/>\n      <PrivateRoute path={'/create-post'} component={CreatePostPage}/>\n      <PrivateRoute component={NotFound}/>\n    </Switch>\n  )\n}\nexport default connect(() => {\n}, { checkToken })(App)\n","import { DATA_STATUSES } from '../../utils'\nimport * as authConstants from './constants'\n\nconst authState = {\n  isAuth: false,\n  authStatus: DATA_STATUSES.UN_TOUCHED,\n  checkTokenStatus: DATA_STATUSES.UN_TOUCHED,\n  signUpStatus: DATA_STATUSES.UN_TOUCHED\n}\n\nexport default function auth(state = authState, action) {\n  switch (action.type) {\n    // login\n    case authConstants.AUTH_SIGN_IN_START:\n      return {\n        ...state,\n        authStatus: DATA_STATUSES.REQUESTING\n      }\n    case authConstants.AUTH_SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        authStatus: DATA_STATUSES.SUCCESS,\n        checkTokenStatus: DATA_STATUSES.SUCCESS,\n        isAuth: true\n      }\n    case authConstants.AUTH_SIGN_IN_ERROR:\n      return {\n        ...state,\n        isAuth: false,\n        authStatus: DATA_STATUSES.ERROR\n      }\n    //check token\n    case authConstants.CHECK_TOKEN_START:\n      return {\n        ...state,\n        checkTokenStatus: DATA_STATUSES.REQUESTING\n      }\n    case authConstants.CHECK_TOKEN_SUCCESS:\n      return {\n        ...state,\n        checkTokenStatus: DATA_STATUSES.SUCCESS,\n        isAuth: true\n      }\n    case authConstants.CHECK_TOKEN_ERROR:\n      return {\n        ...state,\n        isAuth: false,\n        checkTokenStatus: DATA_STATUSES.ERROR\n      }\n    // login\n    case authConstants.AUTH_SIGN_UP_START:\n      return {\n        ...state,\n        signUpStatus: DATA_STATUSES.REQUESTING\n      }\n    case authConstants.AUTH_SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        signUpStatus: DATA_STATUSES.SUCCESS,\n      }\n    case authConstants.AUTH_SIGN_UP_ERROR:\n      return {\n        ...state,\n        isAuth: false,\n        signUpStatus: DATA_STATUSES.ERROR\n      }\n    case authConstants.AUTH_SIGN_UP_CLEAR:\n      return {\n        ...state,\n        isAuth: false,\n        signUpStatus: DATA_STATUSES.UN_TOUCHED\n      }\n    default:\n      return state\n  }\n}\n","import { DATA_STATUSES } from '../../utils'\nimport * as postConstants from './constants'\n\nconst postState = {\n  posts: null,\n  postsStatus: DATA_STATUSES.UN_TOUCHED,\n  selectedPost: null,\n  selectedPostStatus: DATA_STATUSES.UN_TOUCHED,\n  createPostStatus: DATA_STATUSES.UN_TOUCHED,\n  getCommentsStatus: DATA_STATUSES.UN_TOUCHED,\n  createCommentsStatus: DATA_STATUSES.UN_TOUCHED,\n}\n\nexport default function post(state = postState, action) {\n  switch (action.type) {\n    // get all\n    case postConstants.GET_ALL_START:\n      return {\n        ...state,\n        postsStatus: DATA_STATUSES.REQUESTING\n      }\n    case postConstants.GET_ALL_SUCCESS:\n      return {\n        ...state,\n        postsStatus: DATA_STATUSES.SUCCESS,\n        posts: action.data\n      }\n    case postConstants.GET_ALL_ERROR:\n      return {\n        ...state,\n        postsStatus: DATA_STATUSES.ERROR\n      }\n    // get one\n    case postConstants.GET_ONE_START:\n      return {\n        ...state,\n        selectedPostStatus: DATA_STATUSES.REQUESTING\n      }\n    case postConstants.GET_ONE_SUCCESS:\n      return {\n        ...state,\n        selectedPostStatus: DATA_STATUSES.SUCCESS,\n        selectedPost: action.data\n      }\n    case postConstants.GET_ONE_ERROR:\n      return {\n        ...state,\n        selectedPostStatus: DATA_STATUSES.ERROR\n      }\n    case postConstants.CLEAR_POST:\n      return {\n        ...state,\n        selectedPostStatus: DATA_STATUSES.UN_TOUCHED,\n        getCommentsStatus: DATA_STATUSES.UN_TOUCHED,\n        createCommentsStatus: DATA_STATUSES.UN_TOUCHED,\n        selectedPost: null\n      }\n    // create\n    case postConstants.CREATE_POST_START:\n      return {\n        ...state,\n        createPostStatus: DATA_STATUSES.REQUESTING\n      }\n    case postConstants.CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        createPostStatus: DATA_STATUSES.SUCCESS\n      }\n    case postConstants.CREATE_POST_ERROR:\n      return {\n        ...state,\n        createPostStatus: DATA_STATUSES.ERROR\n      }\n    case postConstants.CREATE_POST_CLEAR:\n      return {\n        ...state,\n        createPostStatus: DATA_STATUSES.UN_TOUCHED,\n        selectedPost: null\n      }\n    // get comments\n    case postConstants.GET_COMMENTS_START:\n      return {\n        ...state,\n        getCommentsStatus: DATA_STATUSES.REQUESTING\n      }\n    case postConstants.GET_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        getCommentsStatus: DATA_STATUSES.SUCCESS,\n        selectedPost: { ...state.selectedPost, comments: action.data }\n      }\n    case postConstants.GET_COMMENTS_ERROR:\n      return {\n        ...state,\n        getCommentsStatus: DATA_STATUSES.ERROR\n      }\n    // create comments\n    case postConstants.CREATE_COMMENT_START:\n      return {\n        ...state,\n        createCommentsStatus: DATA_STATUSES.REQUESTING\n      }\n    case postConstants.CREATE_COMMENT_SUCCESS:\n      return {\n        ...state,\n        createCommentsStatus: DATA_STATUSES.SUCCESS,\n        selectedPost: { ...state.selectedPost, comments: [...state.selectedPost.comments, action.data] }\n      }\n    default:\n      return state\n  }\n}\n","import { DATA_STATUSES } from '../../utils'\nimport * as userConstants from './constants'\n\nconst userState = {\n  user: null,\n  userStatus: DATA_STATUSES.UN_TOUCHED\n}\n\nexport default function user(state = userState, action) {\n  switch (action.type) {\n    // get user\n    case userConstants.GET_USER_START:\n      return {\n        ...state,\n        userStatus: DATA_STATUSES.REQUESTING\n      }\n    case userConstants.GET_USER_SUCCESS:\n      return {\n        ...state,\n        userStatus: DATA_STATUSES.SUCCESS,\n        user: action.data\n      }\n    case userConstants.GET_USER_ERROR:\n      return {\n        ...state,\n        userStatus: DATA_STATUSES.ERROR\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport auth from './state/auth/reducer'\nimport post from './state/post/reducer'\nimport user from './state/user/reducer'\n\nconst createRootReducer = () =>\n  combineReducers({\n    auth,\n    post,\n    user\n  })\n\n\nexport default createRootReducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Router } from 'react-router'\nimport './styles/index.scss'\nimport { createBrowserHistory } from 'history'\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './rootReducer'\n\nconst history = createBrowserHistory()\nconst store = createStore(rootReducer(history), applyMiddleware(thunk))\n\nexport { history }\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={createBrowserHistory()}>\n      <App/>\n    </Router>\n  </Provider>, document.getElementById('root'))\n\n"],"sourceRoot":""}